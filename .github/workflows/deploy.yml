name: Deploy React and FastAPI to AWS

on:
  push:
    branches-ignore:
      - feedback

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Certifique-se de clonar tudo, incluindo os arquivos de DVC

      # 2. Listar arquivos do workspace para validação
      - name: List workspace files
        run: |
          echo "Root workspace files:"
          ls -la
          echo "App directory:"
          ls -la ./app
          echo "Back directory:"
          ls -la ./back

      # 3. Compactar arquivos para transferência
      - name: Compress files for SCP
        run: tar -czf deploy.tar.gz ./app ./back ./docker-compose.yml .dvc .dvcignore

      # 4. Enviar arquivos para o servidor EC2
      - name: Deploy to AWS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_TEST }}
          username: ubuntu
          key: ${{ secrets.KEY_TEST }}
          port: 22
          source: ./deploy.tar.gz
          target: ~/deploy

      # 5. Executar comandos no servidor
      - name: Run Deployment Commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_TEST }}
          username: ubuntu
          key: ${{ secrets.KEY_TEST }}
          port: 22
          script: |
            # Ir para o diretório de deploy
            cd ~/deploy

            # Descompactar os arquivos enviados
            tar -xzf deploy.tar.gz

            # Instalar dependências necessárias
            sudo apt update
            sudo apt install -y python3-pip
            pip install --no-cache-dir dvc[s3]  # Ajustar conforme o tipo do remoto DVC

            # Configurar credenciais para o DVC remoto
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_KEY }}

            # Baixar os modelos com DVC
            dvc pull

            # Instalar Docker Compose se necessário
            if ! [ -x "$(command -v docker-compose)" ]; then
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Subir os containers Docker
            docker-compose down
            docker-compose up --build -d
